@using Microsoft.AspNetCore.Components.Authorization
@using MinimalHabitsBlazor.Services
@inject NavigationManager NavigationManager
@inject AuthService AuthService
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <span class="oi oi-check" aria-hidden="true"></span> MinimalHabits
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass sidebar" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="habits">
                        <span class="oi oi-list" aria-hidden="true"></span> Habits
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <button class="nav-link" @onclick="HandleLogout">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </button>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="register">
                        <span class="oi oi-person" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

<style>
    .navbar {
        background-color: rgb(5, 39, 103);
        height: 3.5rem;
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .navbar-brand {
        font-size: 1.1rem;
        color: white;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-right: 1rem;
    }

    .navbar-brand .oi {
        font-size: 1.2rem;
        color: white;
        margin-right: 0.5rem;
    }

    .navbar-toggler {
        background-color: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        padding: 0.5rem;
        display: block;
    }

    .navbar-toggler-icon {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        display: inline-block;
        width: 1.5em;
        height: 1.5em;
        vertical-align: middle;
    }

    .sidebar {
        background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%);
        color: white;
    }

    .nav-item {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
    }

    .nav-item:first-of-type {
        padding-top: 1rem;
    }

    .nav-item:last-of-type {
        padding-bottom: 1rem;
    }

    .nav-item ::deep a, .nav-item ::deep button {
        color: #d7d7d7;
        border-radius: 4px;
        height: 3rem;
        display: flex;
        align-items: center;
        line-height: 3rem;
        text-decoration: none;
        padding: 0 1rem;
        background: none;
        border: none;
        width: 100%;
        text-align: left;
        cursor: pointer;
    }

    .nav-item ::deep a.active, .nav-item ::deep button.active {
        background-color: rgba(255,255,255,0.37);
        color: white;
    }

    .nav-item ::deep a:hover, .nav-item ::deep button:hover {
        background-color: rgba(255,255,255,0.1);
        color: white;
    }

    .nav-scrollable {
        height: calc(100vh - 3.5rem);
        overflow-y: auto;
    }

    .oi {
        width: 2rem;
        font-size: 1.1rem;
        vertical-align: text-top;
        top: -2px;
    }

    .nav-link {
        padding: 0.5rem 1rem;
        display: flex;
        align-items: center;
        color: #d7d7d7;
        text-decoration: none;
        gap: 0.5rem;
    }

    .nav-link:hover {
        color: white;
    }

    .nav-link.active {
        color: white;
        background-color: rgba(255,255,255,0.37);
    }

    /* Desktop styles */
    @@media (min-width: 641px) {
        .navbar-toggler {
            display: none;
        }

        .collapse {
            display: block !important;
        }

        .sidebar {
            width: 250px;
            height: 100vh;
            position: sticky;
            top: 0;
        }
    }

    /* Mobile styles */
    @@media (max-width: 640.98px) {
        .navbar {
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        .navbar-toggler {
            display: block;
        }

        .sidebar {
            position: fixed;
            top: 3.5rem;
            bottom: 0;
            width: 100%;
            z-index: 999;
        }

        .collapse:not(.show) {
            display: none;
        }
    }
</style>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse nav-scrollable" : "collapse show nav-scrollable";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/");
    }
} 